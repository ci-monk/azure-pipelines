---
parameters:
  - name: enable
    displayName: Enable secrets scan
    type: boolean
    default: false
  - name: continueError
    displayName: Enable continue on error
    type: boolean
    default: false

jobs:
  # ==============================================================================
  # SECRETS SCAN
  # ==============================================================================

  - ${{ if eq(parameters.enable, true) }}:
      - job: Secrets_Scan
        displayName: Secrets scan
        pool:
          vm-image: macOS-latest
        continueOnError: ${{parameters.continueError}}
        condition: |
          and(
            succeeded(),
            eq(variables.GIT_BRANCH_NAME, 'develop')
          )
        steps:
          - bash: |
              brew install gitleaks
            displayName: Install gitleaks

          - bash: |
              if [ -e "$(GIT_ROOT_PATH)/.gitleaks.toml" ]; then
                echo "ðŸ¤– GitLeaks config exist!"
                gitleaks --path=. -c .gitleaks.toml --verbose --redact --commits=$(GIT_COMMIT)
              else
                echo "ðŸ¤– GitLeaks not config exist... using default"
                gitleaks --path=. --verbose --redact --commits=$(GIT_COMMIT)
              fi
            displayName: Run secrets scan
